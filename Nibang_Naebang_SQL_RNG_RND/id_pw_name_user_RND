package user_RNG;

import java.awt.EventQueue;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.security.*;

public class ranidRNG {



	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					sqlrng();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	    public static String encryptSHA256(String str){

	    	String sha = str; 

	    	try{
	    		MessageDigest sh = MessageDigest.getInstance("SHA-256"); 
	    		sh.update(str.getBytes()); 
	    		byte byteData[] = sh.digest();
	    		StringBuffer sb = new StringBuffer(); 
	    		for(int i = 0 ; i < byteData.length ; i++){
	    			sb.append(Integer.toString((byteData[i]&0xff) + 0x100, 16).substring(1));
	    		}

	    		sha = sb.toString();

	    	}catch(NoSuchAlgorithmException e){
	    		//e.printStackTrace(); 
	    		System.out.println("Encrypt Error - NoSuchAlgorithmException");
	    		sha = null; 
	    	}

	    	return sha;
	    }	



	public static String randomHangulName() {
	    List<String> 성 = Arrays.asList("김", "이", "박", "최", "정", "강", "조", "윤", "장", "임", "한", "오", "서", "신", "권", "황", "안",
	        "송", "류", "전", "홍", "고", "문", "양", "손", "배", "조", "백", "허", "유", "남", "심", "노", "정", "하", "곽", "성", "차", "주",
	        "우", "구", "신", "임", "나", "전", "민", "유", "진", "지", "엄", "채", "원", "천", "방", "공", "강", "현", "함", "변", "염", "양",
	        "변", "여", "추", "노", "도", "소", "신", "석", "선", "설", "마", "길", "주", "연", "방", "위", "표", "명", "기", "반", "왕", "금",
	        "옥", "육", "인", "맹", "제", "모", "장", "남", "탁", "국", "여", "진", "어", "은", "편", "구", "용", "제갈", "황보", "남궁", "독고", "선우");
	    List<String> 이름 = Arrays.asList("가", "강", "건", "경", "고", "관", "광", "구", "규", "근", "기", "길", "나", "남", "노", "누", "다",
	        "단", "달", "담", "대", "덕", "도", "동", "두", "라", "래", "로", "루", "리", "마", "만", "명", "무", "문", "미", "민", "바", "박",
	        "백", "범", "별", "병", "보", "빛", "사", "산", "상", "새", "서", "석", "선", "설", "섭", "성", "세", "소", "솔", "수", "숙", "순",
	        "숭", "슬", "승", "시", "신", "아", "안", "애", "엄", "여", "연", "영", "예", "오", "옥", "완", "요", "용", "우", "원", "월", "위",
	        "유", "윤", "율", "으", "은", "의", "이", "익", "인", "일", "잎", "자", "잔", "장", "재", "전", "정", "제", "조", "종", "주", "준",
	        "중", "지", "진", "찬", "창", "채", "천", "철", "초", "춘", "충", "치", "탐", "태", "택", "판", "하", "한", "해", "혁", "현", "형",
	        "혜", "호", "홍", "화", "환", "회", "효", "훈", "휘", "희", "운", "모", "배", "부", "림", "봉", "혼", "황", "량", "린", "을", "비",
	        "솜", "공", "면", "탁", "온", "디", "항", "후", "려", "균", "묵", "송", "욱", "휴", "언", "령", "섬", "들", "견", "추", "걸", "삼",
	        "열", "웅", "분", "변", "양", "출", "타", "흥", "겸", "곤", "번", "식", "란", "더", "손", "술", "훔", "반", "빈", "실", "직", "흠",
	        "흔", "악", "람", "뜸", "권", "복", "심", "헌", "엽", "학", "개", "롱", "평", "늘", "늬", "랑", "얀", "향", "울", "련");
	    Collections.shuffle(성);
	    Collections.shuffle(이름);
	    return 성.get(0) + 이름.get(0) + 이름.get(1);
	  }



	public static int sqlrng() throws SQLException {

		Connection con = null;
		final String URL = "jdbc:mysql://database-1.clbujp5dtees.ap-northeast-2.rds.amazonaws.com/";

		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			con = DriverManager.getConnection(URL, "admin", "singapore");

		} catch (ClassNotFoundException e) {
			System.out.println("fail");
		}
		int i;
		//생성 수 조정
		for (i = 0; i <= 10; i++) 
		{

			int k = (int) (Math.random() * 8999 + 1000);
			
			String ks = "";
			int englen =(int) (Math.random() * 7 + 1);
			int numlen =(int) (Math.random() * 8 + 2 );
			
			String Eng;
			String Num;
			
			for( int j = 0; j<englen; j++ )
			{
				char engran = (char)(Math.random()*26+97);
				if(ks == null)
					ks += engran;
				else
					ks += engran;
			}
			for( int j = 0; j<numlen-englen; j++ )
			{
				char numran = (char)(Math.random()*10+48);
				ks += numran;
			}

				String sql = "insert into Test.user values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
				PreparedStatement pstmt = con.prepareStatement(sql);

				pstmt.setString(1, ks);
				String psw = encryptSHA256(ks);
				pstmt.setString(2, psw);
				
				String name = randomHangulName();
				
				pstmt.setString(3, name);
				pstmt.setInt(4, (int) (Math.random() * 2 + 1));
				pstmt.setInt(5, (int) (Math.random() * 5 + 1));
				pstmt.setInt(6, (int) (Math.random() * 8 + 14));
				pstmt.setInt(7, (int) (Math.random() * 8 + 1996));
				pstmt.setInt(8, (int) (Math.random() * 12 + 1));
				pstmt.setInt(9, (int) (Math.random() * 6 + 1));
				pstmt.setInt(10, (int) (Math.random() * 6 + 1));
				pstmt.setInt(11, (int) (Math.random() * 6 + 1));
				pstmt.setInt(12, (int) (Math.random() * 3 + 1));
				pstmt.setInt(13, (int) (Math.random() * 3 + 1));
				pstmt.setInt(14, (int) (Math.random() * 2 ));
				pstmt.setInt(15, (int) (Math.random() * 2 ));
				pstmt.setInt(16, (int) (Math.random() * 2 ));
				pstmt.setInt(17, (int) (Math.random() * 4 + 1));
				pstmt.setInt(18, (int) (Math.random() * 3 + 1));
				pstmt.setInt(19, (int) (Math.random() * 3 + 1));
				pstmt.setInt(20, (int) (Math.random() * 3 + 1));
				pstmt.setInt(21, (int) (Math.random() * 3 + 1));
				pstmt.setInt(22, (int) (Math.random() * 3 + 1));
				pstmt.setInt(23, (int) (Math.random() * 2 + 1));
				pstmt.setInt(24, (int) (Math.random() * 4 + 1));
				pstmt.setInt(25, (int) (Math.random() * 2 + 1));
				pstmt.setInt(26, (int) (Math.random() * 2 + 1));
				pstmt.setInt(27, (int) (Math.random() * 3 + 1));
				pstmt.setInt(28, (int) (Math.random() * 2 + 1));
				pstmt.setInt(29, (int) (Math.random() * 2 + 1));
				pstmt.setInt(30, (int) (Math.random() * 3 + 1));
				pstmt.setInt(31, (int) (Math.random() * 3 + 1));
				pstmt.setInt(32, (int) (Math.random() * 3 + 1));
				pstmt.setInt(33, (int) (Math.random() * 3 + 1));
				pstmt.setInt(34, (int) (Math.random() * 5 + 1));

				System.out.println(k);

				pstmt.executeUpdate();
			
		}
		return 0;
	}
}
